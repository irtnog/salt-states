{%- from "sshd/map.jinja" import sshd_settings with context -%}
{#- remove formula-specific keys (kind of a hack) -#}
{%- do sshd_settings.pop('packages') -%}
{%- do sshd_settings.pop('config_directory') -%}
{%- do sshd_settings.pop('services') -%}
{%- do sshd_settings.pop('moduli') -%}
#### SSHD_CONFIG --- System-wide OpenSSH server configuration file

### This is the sshd server system-wide configuration file, managed by
### Salt.  See sshd_config(5) for more information.  Note that any
### changes to this file will be overwritten by the configuration
### management system.

{%- macro render_sshd_config(dict, width=0) -%}
{%- if dict is defined and dict is mapping %}
{%- for key, value in dict.items() %}
{%- if value is sameas None %}
{#- no-op -#}
{%- elif key.split(' ')[0] in ['Match'] %}
{{ '%s'|format(key)|indent(width) }}{{ render_ssh_config(value, width+2) }}
{%- elif value is sequence and value is not string %}
{%- if key in ['AcceptEnv', 'HostKey', 'ListenAddress', 'Subsystem'] %}
{%- for v in value %}
{{ '%s %s'|format(key, v)|indent(width, True) }}
{%- endfor %}
{%- elif key in ['AllowGroups', 'AllowUsers', 'AuthorizedKeysFile',
  'DenyGroups', 'DenyUsers', 'PermitOpen'] %}
{{ '%s %s'|format(key, value|join(' '))|indent(width, True) }}
{%- else %}
{{ '%s %s'|format(key, value|join(','))|indent(width, True) }}
{%- endif %}
{%- elif value is sameas(True) or value is sameas(False) %}
{{ '%s %s'|format(key, "yes" if value else "no")|indent(width, True) }}
{%- elif value is sameas(None) %}
{{ '%s none'|format(key)|indent(width, True) }}
{%- else %}
{{ '%s %s'|format(key, value)|indent(width, True) }}
{%- endif %}
{%- endfor %}
{%- endif %}
{%- endmacro %}
{{ render_sshd_config(sshd_settings) }}

#### SSHD_CONFIG ends here.
