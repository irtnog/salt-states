{%- from "apache/map.jinja" import apache_settings with context -%}
{%- set indent = apache_settings.indent -%}
{%- set enclosing_directives = [
    'AuthnProviderAlias',
    'AuthzProviderAlias',
    'Directory',
    'DirectoryMatch',
    'Else',
    'ElseIf',
    'Files',
    'FilesMatch',
    'If',
    'IfDefine',
    'IfModule',
    'IfVersion',
    'Limit',
    'LimitExcept',
    'Location',
    'LocationMatch',
    'Macro',
    'Proxy',
    'ProxyMatch',
    'RequireAll',
    'RequireAny',
    'RequireNone',
    'VirtualHost',
  ] -%}

{%- macro render_apache_config(dict, width=0) %}
{%- if dict is defined and dict is mapping %}
{%- for directive, argument in dict.items() %}
{%- if argument == None %}
{#- no-op #}
{%- elif directive in ['module_id', 'module_filename'] %}
{#- no-op #}
{%- elif directive.split()[0] in enclosing_directives %}
{{ '<%s>'|format(directive)|indent(width, True) }}{{ render_apache_config(argument, width+indent) }}
{{ '</%s>'|format(directive.split()[0])|indent(width, True) }}
{%- elif argument is sequence and argument is not string %}
{{ '%s "%s"'|format(directive, argument|join('" "'),)|indent(width, True) }}
{%- elif argument == True or argument == False %}
{#- CAUTION: argument values of 0 and 1 must be escaped as strings;
    otherwise, they will be considered booleans and match this clause
    instead of the next. #}
{{ '%s %s'|format(directive, "on" if argument else "off")|indent(width, True) }}
{%- else %}
{{ '%s %s'|format(directive, argument)|indent(width, True) }}
{%- endif %}
{%- endfor %}
{%- endif %}
{%- endmacro %}
