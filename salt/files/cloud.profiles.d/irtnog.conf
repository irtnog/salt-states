#### CLOUD.PROFILES.D/IRTNOG.CONF --- EC2 instance profiles for the irtnog account

### WARNING: DO NOT EXTEND A PROFILE MORE THAN ONCE!  Extending cloud
### profiles and providers is not recursive.  For example, a profile
### that is extended by a second profile is possible, but the second
### profile cannot be extended by a third profile.
###
### Also, if a profile (or provider) is extending another profile and
### each contains a list of values, the lists from the extending
### profile will override the list from the original profile.  The
### lists are not merged together.

### NOTE: REGARDING AMAZON MACHINE IMAGES FOR WINDOWS, Amazon
### periodically creates new Windows AMIs with the latest Microsoft
### updates installed, deregistering the old ones.  This causes
### salt-cloud deployments using Windows profiles using the
### deregistered AMIs to fail.  When this happens one must update the
### "image" key in affected profiles.  To list the available Windows
### AMIs for a given region, use an AWS CLI command similar to the
### following:
###
### aws ec2 describe-images --owners amazon \
###   --filters "Name=platform,Values=windows" --output table \
###   --query 'Images[*].{ImageId:ImageId,Description:Description}'

{%- if grains['os_family'] == 'FreeBSD' %}
{%- set prefix = '/usr/local' %}
{%- else %}
{%- set prefix = '' %}
{%- endif %}

####
#### PROFILES FOR THE DEFAULT VPC IN US-EAST-1
####

{#- Get the default VPC ID. #}
{%- for default_vpc in salt.boto_vpc.describe_vpcs(region='us-east-1')['vpcs'] if default_vpc.is_default %}

## Amazon Linux 2016.09.1
irtnog-dev-linux:
  provider: irtnog-ec2-nvirginia
  image: ami-0b33d91d
  ssh_username: ec2-user
  size: t2.nano
  block_device_mappings:
    - DeviceName: /dev/xvda
      Ebs.VolumeType: standard  # a/k/a magnetic
  del_root_vol_on_destroy: True
  del_all_vol_on_destroy: True
  network_interfaces:
    - DeviceIndex: 0
      ## auto-assign public IP, not EIP
      AssociatePublicIpAddress: True
      SubnetId:                 # default VPC, us-east-1e
{%-   for subnet in salt.boto_vpc.describe_subnets(vpc_id=default_vpc, region='us-east-1')['subnets']
      if subnet.availability_zone == 'us-east-1e' %}
        {{ subnet.id|yaml_encode }}
{%-   endfor %}
      SecurityGroupId:
        ## default security group
        - {{ salt.boto_secgroup.get_group_id('default',
               vpc_id=default_vpc,
               region='us-east-1')|yaml_encode }}
  tag:
    Environment:
      Development
    Service:
      Software Engineering

dyndns-dev-instance:
  extends: irtnog-dev-linux
  tag:
    dyndns:hostname:
      test.aws.irtnog.org
    dyndns:zoneid:
      {{ salt.boto_route53.describe_hosted_zones(domain_name='aws.irtnog.org.')['HostedZone']['Id'].split('/')[2] }}

## Windows Server 2016 Core
irtnog-dev-windows:
  provider: irtnog-ec2-nvirginia
  image: ami-258d8432
  userdata_file: {{ prefix }}/etc/salt/windows-firewall.ps1
  win_installer: /root/Salt-Minion-2016.11.3-AMD64-Setup.exe
  win_username: Administrator
  win_password: auto
{%-   if grains.os_family == 'FreeBSD' %}
  use_winrm: True
{%-   endif %}
  size: t2.nano
  block_device_mappings:
    - DeviceName: /dev/sda1
      Ebs.VolumeType: standard  # a/k/a magnetic
  del_root_vol_on_destroy: True
  del_all_vol_on_destroy: True
  network_interfaces:
    - DeviceIndex: 0
      AssociatePublicIpAddress: True
      SubnetId:                 # default VPC, us-east-1e
{%-   for subnet in salt.boto_vpc.describe_subnets(vpc_id=default_vpc, region='us-east-1')['subnets']
      if subnet.availability_zone == 'us-east-1e' %}
        {{ subnet.id|yaml_encode }}
{%-   endfor %}
      SecurityGroupId:
        ## default security group
        - {{ salt.boto_secgroup.get_group_id('default',
               vpc_id=default_vpc,
               region='us-east-1')|yaml_encode }}
  tag:
    Environment:
      Development
    Service:
      Software Engineering

{%- endfor %}

#### Local Variables:
#### mode: yaml
#### End:

#### CLOUD.PROFILES.D/IRTNOG.CONF ends here.
