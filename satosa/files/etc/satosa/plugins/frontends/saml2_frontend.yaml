{%- from "satosa/map.jinja" import pysaml2_idp_args, satosa_saml2_frontend with context -%}
{%- set entityid = satosa_saml2_frontend.pop('entityid') %}
{%- set org_name = satosa_saml2_frontend.pop('organization') %}
{%- set org_display_name = satosa_saml2_frontend.pop('organization_display_name') or org_name %}
{%- set org_url = satosa_saml2_frontend.pop('organization_url') %}
{%- set support_contact = satosa_saml2_frontend.pop('support_contact') %}
{%- set support_email = satosa_saml2_frontend.pop('support_email') %}
{%- set tech_contact = satosa_saml2_frontend.pop('technical_contact') or support_contact %}
{%- set tech_email = satosa_saml2_frontend.pop('technical_email') or support_email %}
{%- set metadata = satosa_saml2_frontend.pop('metadata') %}
{%- set accepted_time_diff = satosa_saml2_frontend.pop('accepted_time_diff') %}
{%- set acr_mapping = satosa_saml2_frontend.pop('acr_mapping') %}
{%- set endpoints = satosa_saml2_frontend.pop('endpoints') %}
module: satosa.frontends.saml2.SAMLFrontend
name: Saml2IDP
config:
  idp_config:
    entityid:
      {{ entityid|yaml_encode }}
    key_file:
      /opt/satosa/etc/satosa/keymat/saml2_frontend.key
    cert_file:
      /opt/satosa/etc/satosa/keymat/saml2_frontend.crt

    organization:
      name:
        {{ org_name|yaml_encode }}
      display_name:
        {{ org_display_name|yaml_encode }}
      url:
        {{ org_url|yaml_encode }}

    contact_person:
      - contact_type:
          support
        given_name:
          {{ support_contact|yaml_encode }}
        email_address:
          {{ support_email|yaml_encode }}
      - contact_type:
          technical
        given_name:
          {{ tech_contact|yaml_encode }}
        email_address:
          {{ tech_email|yaml_encode }}

    metadata:
      local:
        {{ metadata.local|yaml(False)|indent(width=8) }}
      remote:
        {{ metadata.remote|yaml(False)|indent(width=8) }}

    accepted_time_diff:
      {{ accepted_time_diff|yaml_encode }}
    service:
      idp:
        endpoints:
          single_sign_on_service:
            []
{#- NOTE: Remaining keys in satosa_saml2_frontend get emitted here. #}
{%- for arg in pysaml2_idp_args %}
{%-   set val = satosa_saml2_frontend[arg]|default(None) %}
{%-   if val is not sameas none %}
        {{ arg|yaml_encode }}:
          {{ val|yaml(False)|indent(width=10) }}
{%-   endif %}
{%- endfor %}

{%- if acr_mapping %}

  acr_mapping:
    {{ acr_mapping|yaml }}

{%- endif %}

  endpoints:
    {{ endpoints|yaml(False)|indent }}
